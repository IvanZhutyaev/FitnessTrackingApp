
services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: my_secure_password
      POSTGRES_DB: fitnesstracker
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fitness-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fitnesstracker"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./FitnessTrackerBack
      dockerfile: Dockerfile
    volumes:
      - ./fitnesstrackerback:/app/fitnesstrackerback
    #   - "5024:5024"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=fitnesstracker;Username=postgres;Password=my_secure_password
    depends_on:
      db:
        condition: service_healthy
    networks:
      - fitness-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-config:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt  # Монтируем сертификаты
    depends_on:
      - backend
    networks:
      - fitness-network

volumes:
  postgres_data:
  nginx-config:

networks:
  fitness-network:
    driver: bridge













































